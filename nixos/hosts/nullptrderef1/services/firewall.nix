{ config, pkgs, opts, secrets, ... }:
let
  mkPort = port_str: if builtins.isString port_str then pkgs.lib.strings.toInt port_str else port_str;
in
{
  networking.firewall = {
    enable = true;
    allowPing = false;
    allowedTCPPorts = builtins.map mkPort (with opts.ports;
      [
        adguard_dns
        adguard_web
        archivebox
        aria_rpc
        aria_web
        audiobookshelf
        autobrr
        baikal
        bazarr
        cloudbeaver
        cockpit
        docuseal
        filebrowser
        firefly_app
        firefly_db
        flaresolverr
        freshrss
        ftp
        grafana
        homebox
        homer
        https
        huginn-app
        huginn-db
        icecast
        jackett
        jellyfin
        jellyseer
        kavita
        lidarr
        linkding
        memos
        metube
        navidrome
        netdata
        ntfy
        olivetin
        ollama-api
        ollama-web
        openbooks
        photoprism_app
        photoprism_db
        plex
        portrainer_misc
        portrainer_web
        portrainer_web_secure
        prometheus_app
        prometheus_node
        prowlarr
        qbittorrent-p2p
        qbittorrent-web
        radarr
        readarr
        rss-bridge
        searxng
        sonarr
        ssh
        taskchampion
        thelounge
        uptime-kuma
        vaultwarden
        znc
      ]);
    allowedUDPPorts = builtins.map mkPort (with opts.ports;
      [
        adguard_dns
        audiobookshelf
        ftp
        jellyfin
        qbittorrent-p2p
        ssh
      ]);
  };
}
