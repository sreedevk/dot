local function map(mode, lhs, rhs, opts)
  local options = { noremap = true }
  if opts then options = vim.tbl_extend('force', options, opts) end
  vim.keymap.set(mode, lhs, rhs, options)
end

map('n', '<Leader>lz', '<cmd>Lazy<CR>')
map('n', ',', ':')
map('v', ',', ':')
map('n', '<Leader>rr', '<cmd>e!<CR>')
map('n', '<Leader>fs', '<cmd>w<CR>')
map('n', '<Leader>sw', "<cmd>execute 'silent! write !sudo tee % >/dev/null' <bar> edit!<cr>")
map('n', '<Leader>q', '<cmd>q<CR>')
map('n', '<Leader>h', '<cmd>noh<CR>')
map('n', '<esc>', '<cmd>noh<cr>')
map('t', "<C-\\><C-\\>", "<C-\\><C-n>")
map('n', 'n', 'nzzzv')
map('n', 'N', 'Nzzzv')
map('n', '<C-d>', '<C-d>zz')
map('n', '<C-u>', '<C-u>zz')
map('v', '<M-j>', ":m '>+1<CR>gv=gv")
map('v', '<M-k>', ":m '<-2<CR>gv=gv")
map('n', '<Leader>x', '<cmd>! chmod +x %<CR>')
map('n', '<leader><leader>s', ":%s/\\<<C-r><C-w>\\>//gI<Left><Left><Left>")
map('n', '<Leader>cd', "<cmd>lua vim.cmd('tcd ' .. vim.fn.expand('%:p:h'))<CR>")
map('n', '<C-t>', '<cmd>tabnew<CR>')
map('n', '<Leader>ca', "<cmd>tabonly<cr>")
map('n', '<Leader>bb', '<cmd>bnext<CR>')
map('n', '<Leader>bB', '<cmd>bprev<CR>')
map('n', '<leader>sp', '<cmd>set spell!<CR>')
map('n', '<Leader>cml', [[:lua require("utils").convert_cword_to_camel()<CR>]])
map('n', '<Leader>snk', [[:lua require("utils").convert_cword_to_snake()<CR>]])
map('n', '<Leader>fch', [[:lua require("utils").fetchjson()<CR>]])

map('v', '<Leader>la', ':lua<CR>')
map("n", "<leader>la", "<cmd>.lua<CR>", { desc = "Execute the current line" })
map("n", "<leader><leader>la", "<cmd>source %<CR>", { desc = "Execute the current file" })

map("n", "<M-,>", "<c-w>5<")
map("n", "<M-.>", "<c-w>5>")
map("n", "<M-d>", "<C-W>+")
map("n", "<M-u>", "<C-W>-")
map("n", "<left>", "<c-w>5<")
map("n", "<right>", "<c-w>5>")
map("n", "<down>", "<C-W>+")
map("n", "<up>", "<C-W>-")
